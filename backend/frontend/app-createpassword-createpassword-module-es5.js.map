{"version":3,"sources":["src/app/createpassword/cp/cp.component.html","src/app/createpassword/createpassword.component.html","src/app/admin/admin-dashboard/admin-serv.service.ts","src/app/allserv.service.ts","src/app/createpassword/cp/cp.component.scss","src/app/createpassword/cp/cp.component.ts","src/app/createpassword/createpassword-routing.module.ts","src/app/createpassword/createpassword.component.css","src/app/createpassword/createpassword.component.ts","src/app/createpassword/createpassword.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,olBAAA;;;;;;;;;;;;;;;;ACAf,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,mCAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8CCQf;AACA;AACA;;;AAEA,QAAM,WAAW,GAAG;AAClB,MAAA,OAAO,EAAE,IAAI,iDAAA,CAAA,aAAA,CAAJ,CAAgB;AACvB,wBAAgB,kBADO;AAEvB,QAAA,aAAa,EAAE,YAAY,CAAC,OAAb,CAAqB,cAArB;AAFQ,OAAhB;AADS,KAApB;;AAUA,QAAa,gBAAb;AAIE,gCAAoB,IAApB,EAAoC;AAAA;;AAAhB,aAAA,IAAA,GAAA,IAAA;AAHpB,aAAA,OAAA,GAAU,sDAAA,CAAA,aAAA,CAAA,CAAY,cAAZ,GAA6B,MAAvC;AAKQ,aAAA,UAAA,GAAa,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA4B,EAA5B,CAAb,CAF4B,CAIpC;;AACQ,aAAA,cAAA,GAAiB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA6B,IAA7B,CAAjB;AALgC;;AAJ1C;AAAA;AAAA,0CAWoB,IAXpB,EAWiC;AAC7B;AACA,eAAK,cAAL,CAAoB,IAApB,CAAyB,IAAzB;AACD;AAdH;AAAA;AAAA,4CAgBmB;AACf,iBAAO,KAAK,cAAL,CAAoB,YAApB,EAAP;AACD;AAlBH;AAAA;AAAA,sCAoBgB,IApBhB,EAoB4B;AACxB;AACA,eAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB;AACD;AAvBH;AAAA;AAAA,wCAyBe;AACX,iBAAO,KAAK,UAAL,CAAgB,YAAhB,EAAP;AACD;AA3BH;AAAA;AAAA,sCA6BgB,IA7BhB,EA6BoB;AAChB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,eAA9B,EAA+C,IAA/C,CAAP;AACD;AA/BH;AAAA;AAAA,yCAiCmB,IAjCnB,EAiCuB;AACnB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,gBAA9B,EAAgD,IAAhD,EAAsD,WAAtD,CAAP;AACD;AAnCH;AAAA;AAAA,6CAoCuB,IApCvB,EAoC2B;AACvB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,gBAA9B,EAAgD,IAAhD,CAAP;AACD;AAtCH;AAAA;AAAA,6CAwCuB,IAxCvB,EAwC2B;AACvB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,cAA9B,EAA8C,IAA9C,EAAoD,WAApD,CAAP;AACD;AA1CH;AAAA;AAAA,4CA2CsB,IA3CtB,EA2C0B;AACtB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,aAA9B,EAA6C,IAA7C,EAAmD,WAAnD,CAAP;AACD;AA7CH;AAAA;AAAA,4CA+CsB,IA/CtB,EA+C0B;AACtB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,eAA9B,EAA+C,IAA/C,CAAP;AACD;AAjDH;AAAA;AAAA,2CAkDqB,IAlDrB,EAkDyB;AACrB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,YAA9B,EAA4C,IAA5C,CAAP;AACD;AApDH;AAAA;AAAA,+CAsDyB,IAtDzB,EAsD6B;AACzB,iBAAO,KAAK,IAAL,CAAU,IAAV,CACL,KAAK,OAAL,GAAe,mBADV,EAEL,IAFK,EAGL,WAHK,CAAP;AAKD;AA5DH;AAAA;AAAA,sCA8DgB,IA9DhB,EA8DoB;AAChB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,aAA9B,EAA6C,IAA7C,EAAmD,WAAnD,CAAP;AACD;AAhEH;AAAA;AAAA,sCAkEgB,IAlEhB,EAkEoB;AAChB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,iBAA9B,EAAiD,IAAjD,EAAuD,WAAvD,CAAP;AACD;AApEH;AAAA;AAAA,uCAsEiB,IAtEjB,EAsEqB;AACjB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,kBAA9B,EAAkD,IAAlD,EAAwD,WAAxD,CAAP;AACD;AAxEH;AAAA;AAAA,sCAyEgB,IAzEhB,EAyEoB;AAChB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,iBAA9B,EAAiD,IAAjD,EAAuD,WAAvD,CAAP;AACD;AA3EH;AAAA;AAAA,yCA4EmB,IA5EnB,EA4EuB;AACnB,iBAAO,KAAK,IAAL,CAAU,IAAV,CACL,KAAK,OAAL,GAAe,oBADV,EAEL,IAFK,EAGL,WAHK,CAAP;AAKD;AAlFH;AAAA;AAAA,8CAmFwB,IAnFxB,EAmF4B;AACxB,iBAAO,KAAK,IAAL,CAAU,IAAV,CACL,KAAK,OAAL,GAAe,qBADV,EAEL,IAFK,EAGL,WAHK,CAAP;AAKD;AAzFH;AAAA;AAAA,qCA2Fe,IA3Ff,EA2FmB;AACf,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,QAA9B,EAAwC,IAAxC,EAA8C,WAA9C,CAAP;AACD;AA7FH;AAAA;AAAA,iCA8FW,IA9FX,EA8Fe;AACX,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,WAA9B,EAA2C,IAA3C,EAAiD,WAAjD,CAAP;AACD;AAhGH;AAAA;AAAA,oCAiGc,IAjGd,EAiGkB;AACd,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,cAA9B,EAA8C,IAA9C,EAAoD,WAApD,CAAP;AACD;AAnGH;AAAA;AAAA,oCAoGc,IApGd,EAoGkB;AACd,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,YAA9B,EAA4C,IAA5C,EAAkD,WAAlD,CAAP;AACD;AAtGH;AAAA;AAAA,wCAwGkB,IAxGlB,EAwGsB;AAClB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,iBAA9B,EAAiD,IAAjD,EAAuD,WAAvD,CAAP;AACD;AA1GH;AAAA;AAAA,oCA2Gc,IA3Gd,EA2GkB;AACd,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,cAA9B,EAA8C,IAA9C,EAAoD,WAApD,CAAP;AACD;AA7GH;AAAA;AAAA,uCA8GiB,IA9GjB,EA8GqB;AACjB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,iBAA9B,EAAiD,IAAjD,EAAuD,WAAvD,CAAP;AACD;AAhHH;AAAA;AAAA,oCAkHc,IAlHd,EAkHkB;AACd,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,kBAA9B,EAAkD,IAAlD,EAAwD,WAAxD,CAAP;AACD;AApHH;AAAA;AAAA,4CAqHsB,IArHtB,EAqH0B;AACtB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,YAA9B,EAA4C,IAA5C,EAAkD,WAAlD,CAAP;AACD;AAvHH;AAAA;AAAA,uCAwHiB,IAxHjB,EAwHqB;AACjB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,cAA9B,EAA8C,IAA9C,EAAoD,WAApD,CAAP;AACD;AA1HH;AAAA;AAAA,wCA2HkB,IA3HlB,EA2HsB;AAClB,iBAAO,KAAK,IAAL,CAAU,IAAV,CACL,KAAK,OAAL,GAAe,mBADV,EAEL,IAFK,EAGL,WAHK,CAAP;AAKD;AAjIH;AAAA;AAAA,wCAkIkB,IAlIlB,EAkIsB;AAClB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,eAA9B,EAA+C,IAA/C,EAAqD,WAArD,CAAP;AACD;AApIH;AAAA;AAAA,6CAsIuB,IAtIvB,EAsI2B;AACvB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,eAA9B,EAA+C,IAA/C,EAAqD,WAArD,CAAP;AACD;AAxIH;AAAA;AAAA,2CA0IqB,IA1IrB,EA0IyB;AACrB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,eAA9B,EAA+C,IAA/C,EAAqD,WAArD,CAAP;AACD;AA5IH;AAAA;AAAA,wCA8IkB,IA9IlB,EA8IsB;AAClB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,aAA9B,EAA6C,IAA7C,EAAmD,WAAnD,CAAP;AACD;AAhJH;AAAA;AAAA,iCAkJW,IAlJX,EAkJe;AACX,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,cAA9B,EAA8C,IAA9C,CAAP;AACD;AApJH;AAAA;AAAA,iCAqJW,IArJX,EAqJe;AACX,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,WAA9B,EAA2C,IAA3C,CAAP;AACD;AAvJH;AAAA;AAAA,kCAwJY,IAxJZ,EAwJgB;AACZ,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,cAA9B,EAA8C,IAA9C,CAAP;AACD;AA1JH;AAAA;AAAA,oCA4Jc,IA5Jd,EA4JkB;AACd,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,cAA9B,EAA8C,IAA9C,CAAP;AACD;AA9JH;AAAA;AAAA,mCAgKa,IAhKb,EAgKiB;AACb,iBAAO,KAAK,IAAL,CAAU,IAAV,CACL,KAAK,OAAL,GAAe,oBADV,EAEL,IAFK,EAGL,WAHK,CAAP;AAKD;AAtKH;AAAA;AAAA,qCAuKe,IAvKf,EAuKmB;AACf,iBAAO,KAAK,IAAL,CAAU,IAAV,CACL,KAAK,OAAL,GAAe,sBADV,EAEL,IAFK,EAGL,WAHK,CAAP;AAKD;AA7KH;AAAA;AAAA,iDA+K2B,IA/K3B,EA+K+B;AAC3B,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,oBAA9B,EAAoD,IAApD,CAAP;AACD;AAjLH;AAAA;AAAA,yCAmLmB,IAnLnB,EAmLuB;AACnB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,iBAA9B,EAAiD,IAAjD,CAAP;AACD;AArLH;AAAA;AAAA,4CAsLsB,IAtLtB,EAsL0B;AACtB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,qBAA9B,EAAqD,IAArD,CAAP;AACD;AAxLH;AAAA;AAAA,uCAyLiB,IAzLjB,EAyLqB;AACjB,iBAAO,KAAK,IAAL,CAAU,IAAV,CAAe,KAAK,OAAL,GAAe,iBAA9B,EAAiD,IAAjD,CAAP;AACD;AA3LH;;AAAA;AAAA,OAAA;;;;cAI4B,iDAAA,CAAA,YAAA;;;;AAJf,IAAA,gBAAgB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH5B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG4B,CAAA,EAAhB,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBb,QAAa,cAAb;AACE,gCAAA;AAAA;;AACQ,aAAA,YAAA,GAAe,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA4B,EAA5B,CAAf;AAWA,aAAA,aAAA,GAAgB,IAAI,iCAAA,CAAA,iBAAA,CAAJ,CAA4B,EAA5B,CAAhB;AAZQ;;AADlB;AAAA;AAAA,iCAIW,IAJX,EAIuB;AACnB;AACA,eAAK,YAAL,CAAkB,IAAlB,CAAuB,IAAvB;AACD;AAPH;AAAA;AAAA,mCASU;AACN,iBAAO,KAAK,YAAL,CAAkB,YAAlB,EAAP;AACD;AAXH;AAAA;AAAA,qCAee,IAff,EAe2B;AACvB;AACA,eAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB;AACD;AAlBH;AAAA;AAAA,uCAoBc;AACV,iBAAO,KAAK,aAAL,CAAmB,YAAnB,EAAP;AACD;AAtBH;;AAAA;AAAA,OAAA;;AAAa,IAAA,cAAc,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAH1B,MAAA,CAAA,0CAAA,CAAA,YAAA,CAAA,CAAA,CAAW;AACV,MAAA,UAAU,EAAE;AADF,KAAX,CAG0B,CAAA,EAAd,cAAc,CAAd;;;;;;;;;;;;;;;;ACNb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,yzEAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYf,QAAa,WAAb;AAIE,2BACU,cADV,EAEU,EAFV,EAGU,SAHV,EAIU,SAJV,EAKU,MALV,EAMU,OANV,EAMiC;AAAA;;AALvB,aAAA,cAAA,GAAA,cAAA;AACA,aAAA,EAAA,GAAA,EAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,SAAA,GAAA,SAAA;AACA,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,OAAA,GAAA,OAAA;AACN;;AAXN;AAAA;AAAA,mCAaU;AACN,eAAK,UAAL,GAAkB,KAAK,cAAL,CAAoB,QAApB,CAA6B,MAA7B,CAAoC,IAApC,CAAlB;AAEA,eAAK,kBAAL,GAA0B,KAAK,EAAL,CAAQ,KAAR,CAAc;AACtC,YAAA,WAAW,EAAE,CACX,EADW,EAEX,2CAAA,CAAA,YAAA,CAAA,CAAW,OAAX,CAAmB,CAAC,2CAAA,CAAA,YAAA,CAAA,CAAW,QAAZ,EAAsB,2CAAA,CAAA,YAAA,CAAA,CAAW,SAAX,CAAqB,CAArB,CAAtB,CAAnB,CAFW;AADyB,WAAd,CAA1B;AAOA,eAAK,YAAL,GAAoB,YAAY,CAAC,OAAb,CAAqB,OAArB,CAApB;AACD;AAxBH;AAAA;AAAA,0CAyBoB,IAzBpB,EAyBwB;AAAA;;AACpB,cAAI,UAAU,GAAG;AACf,YAAA,QAAQ,EAAE,KAAK,UADA;AAEf,YAAA,QAAQ,EAAE,IAAI,CAAC;AAFA,WAAjB;AAIA,eAAK,SAAL,CAAe,gBAAf,CAAgC,UAAhC,EAA4C,SAA5C,CACE,UAAC,IAAD,EAAc;AACZ,gBAAI,IAAI,CAAC,MAAD,CAAJ,KAAiB,GAArB,EAA0B;AACxB,cAAA,KAAI,CAAC,SAAL,CAAe,OAAf,CAAuB,IAAI,CAAC,SAAD,CAA3B,EAAwC,EAAxC,EAA4C;AAC1C,gBAAA,OAAO,EAAE;AADiC,eAA5C;;AAGA,cAAA,KAAI,CAAC,MAAL,CAAY,QAAZ,CAAqB,CAAC,KAAI,CAAC,YAAN,CAArB;AACD,aALD,MAKO,IAAI,IAAI,CAAC,MAAD,CAAJ,KAAiB,GAArB,EAA0B;AAC/B,cAAA,KAAI,CAAC,SAAL,CAAe,KAAf,CAAqB,0BAArB,EAAiD,IAAI,CAAC,SAAD,CAArD,EAAkE;AAChE,gBAAA,OAAO,EAAE;AADuD,eAAlE;AAGD;AACF,WAZH,EAaE,UAAA,KAAK,EAAG;AACN,YAAA,KAAI,CAAC,SAAL,CAAe,KAAf,CAAqB,gBAArB,EAAuC,KAAK,CAAC,OAAD,CAAL,CAAe,SAAf,CAAvC,EAAkE;AAChE,cAAA,OAAO,EAAE;AADuD,aAAlE;AAGD,WAjBH;AAmBD;AAjDH;;AAAA;AAAA,OAAA;;;;cAK4B,4CAAA,CAAA,gBAAA;;cACZ,2CAAA,CAAA,aAAA;;cACO,sEAAA,CAAA,kBAAA;;cACA,uCAAA,CAAA,eAAA;;cACH,4CAAA,CAAA,QAAA;;cACC,6CAAA,CAAA,gBAAA;;;;AAVR,IAAA,WAAW,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALvB,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,QADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,2FAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKuB,CAAA,EAAX,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRb,QAAM,MAAM,GAAW,CACrB;AACE,MAAA,IAAI,EAAE,EADR;AAEE,MAAA,QAAQ,EAAE,CAAC;AAAE,QAAA,IAAI,EAAE,EAAR;AAAY,QAAA,SAAS,EAAE,6CAAA,CAAA,aAAA;AAAvB,OAAD;AAFZ,KADqB,CAAvB;;AAWA,QAAa,2BAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,2BAA2B,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAJvC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAA,CAAa,QAAb,CAAsB,MAAtB,CAAD,CADD;AAER,MAAA,OAAO,EAAE,CAAC,4CAAA,CAAA,cAAA,CAAD;AAFD,KAAT,CAIuC,CAAA,EAA3B,2BAA2B,CAA3B;;;;;;;;;;;;;;;;ACfb,IAAA,mBAAA,CAAA,CAAA,CAAA,mBAAA;AAAe;;;AAAA,IAAA,mBAAA,CAAA,SAAA,CAAA,GAAA,iNAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACOf,QAAa,uBAAb;AAEE,yCAAA;AAAA;AAAgB;;AAFlB;AAAA;AAAA,mCAIU,CAAK;AAJf;;AAAA;AAAA,OAAA;;AAAa,IAAA,uBAAuB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CALnC,MAAA,CAAA,0CAAA,CAAA,WAAA,CAAA,CAAA,CAAU;AACT,MAAA,QAAQ,EAAE,oBADD;AAET,MAAA,QAAA,EAAA,kCAAA,CAAA,iBAAA,CAAA,CAAA,mBAAA;AAAA;AAAA,oGAAA,CAAA,YAFS;;;;AAAA,KAAV,CAKmC,CAAA,EAAvB,uBAAuB,CAAvB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACYb,QAAa,oBAAb;AAAA;AAAA,KAAA;;AAAa,IAAA,oBAAoB,GAAA,kCAAA,CAAA,YAAA,CAAA,CAAA,CAVhC,MAAA,CAAA,0CAAA,CAAA,UAAA,CAAA,CAAA,CAAS;AACR,MAAA,YAAY,EAAE,CAAC,sDAAA,CAAA,yBAAA,CAAD,EAA0B,6CAAA,CAAA,aAAA,CAA1B,CADN;AAER,MAAA,OAAO,EAAE,CACP,4CAAA,CAAA,cAAA,CADO,EAEP,2DAAA,CAAA,6BAAA,CAFO,EAGP,4CAAA,CAAA,cAAA,CAHO,EAIP,2CAAA,CAAA,aAAA,CAJO,EAKP,2CAAA,CAAA,qBAAA,CALO;AAFD,KAAT,CAUgC,CAAA,EAApB,oBAAoB,CAApB","sourcesContent":["export default \"<div class=\\\"createPasswordWrapper\\\">\\n  <div class=\\\"main-content col-lg-6 col-md-6 col-sm-12\\\">\\n    <form [formGroup]=\\\"setNewPasswordForm\\\">\\n      <label>Enter New Password</label>\\n      <input\\n        type=\\\"text\\\"\\n        placeholder=\\\" New Password\\\"\\n        formControlName=\\\"newpassword\\\"\\n        class=\\\"form-control\\\"\\n      />\\n\\n      <button\\n        class=\\\"btn btn-sign-in btnSbt\\\"\\n        [disabled]=\\\"setNewPasswordForm.invalid\\\"\\n        (click)=\\\"submitNewPassword(setNewPasswordForm.value)\\\"\\n      >\\n        Submit\\n      </button>\\n    </form>\\n  </div>\\n</div>\\n\"","export default \"<router-outlet></router-outlet>\\n\"","import { Injectable } from \"@angular/core\";\nimport {\n  HttpClient,\n  HttpHeaders,\n  HttpErrorResponse\n} from \"@angular/common/http\";\nimport { environment } from \"../../../environments/environment\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n// import { Observable } from 'rxjs';\n// import 'rxjs/add/operator/catch';\n// import 'rxjs/add/observable/throw';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    \"Content-Type\": \"application/json\",\n    Authorization: localStorage.getItem(\"LoggedInUser\")\n  })\n};\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AdminServService {\n  baseUrl = environment.backendBaseUrl + \"/api\";\n  token: any;\n\n  constructor(private http: HttpClient) {}\n\n  private headerText = new BehaviorSubject<string>(\"\");\n\n  // Initialize with emtpy string\n  private headerResponse = new BehaviorSubject<boolean>(true);\n\n  setHeaderResponse(data: boolean) {\n    // Fire the update event with the new data\n    this.headerResponse.next(data);\n  }\n\n  getHeaderResponse(): Observable<boolean> {\n    return this.headerResponse.asObservable();\n  }\n\n  setHeaderText(data: string) {\n    // Fire the update event with the new data\n    this.headerText.next(data);\n  }\n\n  getHeaderText(): Observable<string> {\n    return this.headerText.asObservable();\n  }\n\n  getSalonsList(data) {\n    return this.http.post(this.baseUrl + \"/activesalons\", data);\n  }\n\n  getSalonsRequest(data) {\n    return this.http.post(this.baseUrl + \"/salonsrequest\", data, httpOptions);\n  }\n  approveSalonRequests(data) {\n    return this.http.post(this.baseUrl + \"/acceptrequest\", data);\n  }\n\n  getActiveSalonsCount(data) {\n    return this.http.post(this.baseUrl + \"/salonscount\", data, httpOptions);\n  }\n  getActiveUsersCount(data) {\n    return this.http.post(this.baseUrl + \"/userscount\", data, httpOptions);\n  }\n\n  declineSalonRequest(data) {\n    return this.http.post(this.baseUrl + \"/suspendsalon\", data);\n  }\n  getActiveUsersList(data) {\n    return this.http.post(this.baseUrl + \"/userslist\", data);\n  }\n\n  getAdmincategoriesList(data) {\n    return this.http.post(\n      this.baseUrl + \"/admin-categories\",\n      data,\n      httpOptions\n    );\n  }\n\n  getCategories(data) {\n    return this.http.post(this.baseUrl + \"/categories\", data, httpOptions);\n  }\n\n  addCategories(data) {\n    return this.http.post(this.baseUrl + \"/add-categories\", data, httpOptions);\n  }\n\n  updateCategory(data) {\n    return this.http.post(this.baseUrl + \"/update-category\", data, httpOptions);\n  }\n  updateService(data) {\n    return this.http.post(this.baseUrl + \"/update-service\", data, httpOptions);\n  }\n  deleteCategories(data) {\n    return this.http.post(\n      this.baseUrl + \"/remove-categories\",\n      data,\n      httpOptions\n    );\n  }\n  getArchivedCategories(data) {\n    return this.http.post(\n      this.baseUrl + \"/archive-categories\",\n      data,\n      httpOptions\n    );\n  }\n\n  getRolesList(data) {\n    return this.http.post(this.baseUrl + \"/roles\", data, httpOptions);\n  }\n  addRoles(data) {\n    return this.http.post(this.baseUrl + \"/add-role\", data, httpOptions);\n  }\n  deleteRoles(data) {\n    return this.http.post(this.baseUrl + \"/remove-role\", data, httpOptions);\n  }\n  updateRoles(data) {\n    return this.http.post(this.baseUrl + \"/edit-role\", data, httpOptions);\n  }\n\n  awakeCategories(data) {\n    return this.http.post(this.baseUrl + \"/awake-category\", data, httpOptions);\n  }\n  addServices(data) {\n    return this.http.post(this.baseUrl + \"/add-service\", data, httpOptions);\n  }\n  removeServices(data) {\n    return this.http.post(this.baseUrl + \"/remove-service\", data, httpOptions);\n  }\n\n  getServices(data) {\n    return this.http.post(this.baseUrl + \"/active-services\", data, httpOptions);\n  }\n  fetchAllUsersCommon(data) {\n    return this.http.post(this.baseUrl + \"/all-users\", data, httpOptions);\n  }\n  getUserDetails(data) {\n    return this.http.post(this.baseUrl + \"/user-detail\", data, httpOptions);\n  }\n  getAdminDetails(data) {\n    return this.http.post(\n      this.baseUrl + \"/get-admin-detail\",\n      data,\n      httpOptions\n    );\n  }\n  addAdminDetails(data) {\n    return this.http.post(this.baseUrl + \"/admin-detail\", data, httpOptions);\n  }\n\n  getMonthlyUsersCount(data) {\n    return this.http.post(this.baseUrl + \"/get-analysis\", data, httpOptions);\n  }\n\n  updateAdminDetails(data) {\n    return this.http.post(this.baseUrl + \"/update-admin\", data, httpOptions);\n  }\n\n  getSalonDetails(data) {\n    return this.http.post(this.baseUrl + \"/view-salon\", data, httpOptions);\n  }\n\n  addPlans(data) {\n    return this.http.post(this.baseUrl + \"/create-plan\", data);\n  }\n  getPlans(data) {\n    return this.http.post(this.baseUrl + \"/get-plan\", data);\n  }\n  editPlans(data) {\n    return this.http.post(this.baseUrl + \"/update-plan\", data);\n  }\n\n  deletePlans(data) {\n    return this.http.post(this.baseUrl + \"/delete-plan\", data);\n  }\n\n  activeUser(data) {\n    return this.http.post(\n      this.baseUrl + \"/active-user-check\",\n      data,\n      httpOptions\n    );\n  }\n  deactiveUser(data) {\n    return this.http.post(\n      this.baseUrl + \"/deactive-user-check\",\n      data,\n      httpOptions\n    );\n  }\n\n  getSalonSubscriptionList(data) {\n    return this.http.post(this.baseUrl + \"/get-subscriptions\", data);\n  }\n\n  resetNewPassword(data) {\n    return this.http.post(this.baseUrl + \"/reset-password\", data);\n  }\n  getUpcomingBookings(data) {\n    return this.http.post(this.baseUrl + \"/get-bookings-admin\", data);\n  }\n  cancelBookings(data) {\n    return this.http.post(this.baseUrl + \"/cancel-booking\", data);\n  }\n\n  // errorHandler(error:HttpErrorResponse){\n  //   return Observable.throw(error.message|| \"Server Error\");\n  // }\n}\n","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllservService {\n  constructor() {}\n  private currentRoute = new BehaviorSubject<string>(\"\");\n\n  setRoute(data: string) {\n    // Fire the update event with the new data\n    this.currentRoute.next(data);\n  }\n\n  getRoute(): Observable<string> {\n    return this.currentRoute.asObservable();\n  }\n\n  private previousRoute = new BehaviorSubject<string>(\"\");\n\n  setPrevRoute(data: string) {\n    // Fire the update event with the new data\n    this.previousRoute.next(data);\n  }\n\n  getPrevRoute(): Observable<string> {\n    return this.previousRoute.asObservable();\n  }\n}\n","export default \".createPasswordWrapper {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  bottom: 0;\\n  right: 0;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n.createPasswordWrapper .main-content {\\n  padding: 1em;\\n  border: 1px solid lightgray;\\n  border-radius: 10px;\\n  margin: 5px;\\n}\\n.createPasswordWrapper .main-content form {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.createPasswordWrapper .main-content form .btnSbt {\\n  width: 100px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYW5qaXRhdHdhbC9Eb3dubG9hZHMvTUVBTi1zYWxvbmNybS9mcm9udGVuZC9zcmMvYXBwL2NyZWF0ZXBhc3N3b3JkL2NwL2NwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9jcmVhdGVwYXNzd29yZC9jcC9jcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGtCQUFBO0VBQ0EsTUFBQTtFQUNBLE9BQUE7RUFDQSxTQUFBO0VBQ0EsUUFBQTtFQUNBLGFBQUE7RUFDQSx1QkFBQTtFQUNBLG1CQUFBO0FDQ0Y7QURDRTtFQUNFLFlBQUE7RUFDQSwyQkFBQTtFQUNBLG1CQUFBO0VBQ0EsV0FBQTtBQ0NKO0FEQUk7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7QUNFTjtBRENNO0VBQ0UsWUFBQTtBQ0NSIiwiZmlsZSI6InNyYy9hcHAvY3JlYXRlcGFzc3dvcmQvY3AvY3AuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3JlYXRlUGFzc3dvcmRXcmFwcGVyIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgcmlnaHQ6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuXG4gIC5tYWluLWNvbnRlbnQge1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICBib3JkZXI6IDFweCBzb2xpZCBsaWdodGdyYXk7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBtYXJnaW46IDVweDtcbiAgICBmb3JtIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgbGFiZWwge1xuICAgICAgfVxuICAgICAgLmJ0blNidCB7XG4gICAgICAgIHdpZHRoOiAxMDBweDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiIsIi5jcmVhdGVQYXNzd29yZFdyYXBwZXIge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgYm90dG9tOiAwO1xuICByaWdodDogMDtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG4uY3JlYXRlUGFzc3dvcmRXcmFwcGVyIC5tYWluLWNvbnRlbnQge1xuICBwYWRkaW5nOiAxZW07XG4gIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JheTtcbiAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgbWFyZ2luOiA1cHg7XG59XG4uY3JlYXRlUGFzc3dvcmRXcmFwcGVyIC5tYWluLWNvbnRlbnQgZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG59XG4uY3JlYXRlUGFzc3dvcmRXcmFwcGVyIC5tYWluLWNvbnRlbnQgZm9ybSAuYnRuU2J0IHtcbiAgd2lkdGg6IDEwMHB4O1xufSJdfQ== */\"","import { Component, OnInit } from \"@angular/core\";\nimport { ActivatedRoute, Routes, Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AdminServService } from \"../../admin/admin-dashboard/admin-serv.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { AllservService } from \"../../allserv.service\";\n\n@Component({\n  selector: \"app-cp\",\n  templateUrl: \"./cp.component.html\",\n  styleUrls: [\"./cp.component.scss\"]\n})\nexport class CpComponent implements OnInit {\n  setNewPasswordForm: FormGroup;\n  resetkeyId: any;\n  currentRoute: any;\n  constructor(\n    private activatedRoute: ActivatedRoute,\n    private fb: FormBuilder,\n    private adminServ: AdminServService,\n    private toastServ: ToastrService,\n    private router: Router,\n    private allServ: AllservService\n  ) {}\n\n  ngOnInit() {\n    this.resetkeyId = this.activatedRoute.snapshot.params[\"id\"];\n\n    this.setNewPasswordForm = this.fb.group({\n      newpassword: [\n        \"\",\n        Validators.compose([Validators.required, Validators.minLength(3)])\n      ]\n    });\n\n    this.currentRoute = localStorage.getItem(\"route\");\n  }\n  submitNewPassword(data) {\n    let dataToPass = {\n      resetkey: this.resetkeyId,\n      password: data.newpassword\n    };\n    this.adminServ.resetNewPassword(dataToPass).subscribe(\n      (data: any) => {\n        if (data[\"code\"] === 200) {\n          this.toastServ.success(data[\"message\"], \"\", {\n            timeOut: 1000\n          });\n          this.router.navigate([this.currentRoute]);\n        } else if (data[\"code\"] === 400) {\n          this.toastServ.error(\"Failed to reset password\", data[\"message\"], {\n            timeOut: 1000\n          });\n        }\n      },\n      error => {\n        this.toastServ.error(\"Server - Error\", error[\"error\"][\"message\"], {\n          timeOut: 1000\n        });\n      }\n    );\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { CpComponent } from \"./cp/cp.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    children: [{ path: \"\", component: CpComponent }]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class CreatepasswordRoutingModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NyZWF0ZXBhc3N3b3JkL2NyZWF0ZXBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from \"@angular/core\";\n\n@Component({\n  selector: \"app-createpassword\",\n  templateUrl: \"./createpassword.component.html\",\n  styleUrls: [\"./createpassword.component.css\"]\n})\nexport class CreatepasswordComponent implements OnInit {\n  resetKey: any;\n  constructor() {}\n\n  ngOnInit() {}\n}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { RouterModule } from \"@angular/router\";\n\nimport { CreatepasswordRoutingModule } from \"./createpassword-routing.module\";\nimport { CreatepasswordComponent } from \"./createpassword.component\";\nimport { CpComponent } from \"./cp/cp.component\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [CreatepasswordComponent, CpComponent],\n  imports: [\n    CommonModule,\n    CreatepasswordRoutingModule,\n    RouterModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class CreatepasswordModule {}\n"],"sourceRoot":"webpack:///","file":"app-createpassword-createpassword-module-es5.js"}