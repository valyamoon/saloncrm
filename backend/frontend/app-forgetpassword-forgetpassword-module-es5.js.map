{"version":3,"sources":["src/app/forgetpassword/fp/fp.component.html","src/app/allserv.service.ts","src/app/forgetpassword/forgetpassword-routing.module.ts","src/app/forgetpassword/forgetpassword.module.ts","src/app/forgetpassword/fp/fp.component.scss","src/app/forgetpassword/fp/fp.component.ts","src/app/forgetpassword/fpserv.service.ts"],"names":[],"mappings":"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","sourcesContent":["export default \"<div class=\\\"forgetpasswordwrapper\\\">\\n  <form\\n    class=\\\"main-content col-lg-6 col-md-6 col-sm-12\\\"\\n    [formGroup]=\\\"forgetPasswordForm\\\"\\n  >\\n    <div class=\\\"inpArea\\\">\\n      <label>Email</label>\\n      <input\\n        type=\\\"text\\\"\\n        placeholder=\\\"Enter your email\\\"\\n        formControlName=\\\"email\\\"\\n        class=\\\"form-control\\\"\\n      />\\n    </div>\\n    <button\\n      class=\\\"btn btn-sign-in\\\"\\n      [disabled]=\\\"forgetPasswordForm.invalid\\\"\\n      (click)=\\\"submitEmail(forgetPasswordForm.value)\\\"\\n    >\\n      Submit\\n    </button>\\n    <button class=\\\"btn btn-sign-in\\\" (click)=\\\"cancel()\\\">\\n      Cancel\\n    </button>\\n  </form>\\n</div>\\n\"","import { Injectable } from \"@angular/core\";\nimport { BehaviorSubject, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class AllservService {\n  constructor() {}\n  private currentRoute = new BehaviorSubject<string>(\"\");\n\n  setRoute(data: string) {\n    // Fire the update event with the new data\n    this.currentRoute.next(data);\n  }\n\n  getRoute(): Observable<string> {\n    return this.currentRoute.asObservable();\n  }\n\n  private previousRoute = new BehaviorSubject<string>(\"\");\n\n  setPrevRoute(data: string) {\n    // Fire the update event with the new data\n    this.previousRoute.next(data);\n  }\n\n  getPrevRoute(): Observable<string> {\n    return this.previousRoute.asObservable();\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { FpComponent } from \"./fp/fp.component\";\n\nconst routes: Routes = [{ path: \"\", component: FpComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ForgetpasswordRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { ForgetpasswordRoutingModule } from \"./forgetpassword-routing.module\";\nimport { FpComponent } from \"./fp/fp.component\";\nimport { ReactiveFormsModule, FormsModule } from \"@angular/forms\";\n\n@NgModule({\n  declarations: [FpComponent],\n  imports: [\n    CommonModule,\n    ForgetpasswordRoutingModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class ForgetpasswordModule {}\n","export default \".forgetpasswordwrapper {\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n}\\n.forgetpasswordwrapper .main-content {\\n  border: 1px solid lightgray;\\n  border-radius: 10px;\\n  background: white;\\n  padding: 1em;\\n  margin: 1em;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9yYW5qaXRhdHdhbC9Eb3dubG9hZHMvTUVBTi1zYWxvbmNybS9mcm9udGVuZC9zcmMvYXBwL2ZvcmdldHBhc3N3b3JkL2ZwL2ZwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9mb3JnZXRwYXNzd29yZC9mcC9mcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtFQUNBLHVCQUFBO0VBQ0Esa0JBQUE7RUFDQSxNQUFBO0VBQ0EsT0FBQTtFQUNBLFFBQUE7RUFDQSxTQUFBO0FDQ0Y7QURBRTtFQUNFLDJCQUFBO0VBQ0EsbUJBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxXQUFBO0FDRUoiLCJmaWxlIjoic3JjL2FwcC9mb3JnZXRwYXNzd29yZC9mcC9mcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JnZXRwYXNzd29yZHdyYXBwZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIC5tYWluLWNvbnRlbnQge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGxpZ2h0Z3JheTtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIHBhZGRpbmc6IDFlbTtcbiAgICBtYXJnaW46IDFlbTtcbiAgICAuaW5wQXJlYSB7XG4gICAgfVxuICB9XG59XG4iLCIuZm9yZ2V0cGFzc3dvcmR3cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgYm90dG9tOiAwO1xufVxuLmZvcmdldHBhc3N3b3Jkd3JhcHBlciAubWFpbi1jb250ZW50IHtcbiAgYm9yZGVyOiAxcHggc29saWQgbGlnaHRncmF5O1xuICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgcGFkZGluZzogMWVtO1xuICBtYXJnaW46IDFlbTtcbn0iXX0= */\"","import { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { FpservService } from \"../fpserv.service\";\nimport { ToastrService } from \"ngx-toastr\";\nimport { AllservService } from \"../../allserv.service\";\n\n@Component({\n  selector: \"app-fp\",\n  templateUrl: \"./fp.component.html\",\n  styleUrls: [\"./fp.component.scss\"]\n})\nexport class FpComponent implements OnInit {\n  forgetPasswordForm: FormGroup;\n  emailPattern: any = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  currentRoute: any;\n  constructor(\n    private fb: FormBuilder,\n    private router: Router,\n    private fpServ: FpservService,\n    private toastServ: ToastrService,\n    private allServ: AllservService\n  ) {}\n\n  ngOnInit() {\n    this.forgetPasswordForm = this.fb.group({\n      email: [\"\", [Validators.required, Validators.pattern(this.emailPattern)]]\n    });\n    this.allServ.getRoute().subscribe((data: any) => {\n      this.currentRoute = data;\n    });\n    if (this.currentRoute) {\n      // this.allServ.setPrevRoute(this.currentRoute);\n      localStorage.setItem(\"route\", this.currentRoute);\n    }\n  }\n  submitEmail(data) {\n    this.fpServ.forgotPassword(data).subscribe(\n      (data: any) => {\n        if (data[\"code\"] === 200) {\n          this.toastServ.success(data[\"message\"], \"\", {\n            timeOut: 1000\n          });\n          this.router.navigate([this.currentRoute]);\n        } else if (data[\"code\"] === 400) {\n          this.toastServ.error(\n            \"Failed to send Password link\",\n            data[\"message\"],\n            {\n              timeOut: 1000\n            }\n          );\n        }\n      },\n      error => {\n        this.toastServ.error(\"Server - Error\", error[\"error\"][\"message\"], {\n          timeOut: 1000\n        });\n      }\n    );\n  }\n  cancel() {\n    this.router.navigate([this.currentRoute]);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class FpservService {\n  baseUrl = environment.backendBaseUrl + \"/api\";\n  constructor(private http: HttpClient) { }\n\n  forgotPassword(data) {\n\n    return this.http.post(this.baseUrl + \"/forgot-password\", data);\n  }\n}\n"],"sourceRoot":"webpack:///","file":"app-forgetpassword-forgetpassword-module-es5.js"}